/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

/**
 * Navigation layers
 */

@import "animations.less";
@import "variables.less";

// All platforms - media queries
@media (max-width: @breakpointNarrowViewport) {
  .loadTime { display: none; }
}

// (macOS) We need to keep a padding left to avoid overlapping
// with the window buttons to close/maximize/minimize the window.
.platform--darwin .navigatorWrapper .topLevelStartButtons {

  // Since we want to keep the navigationBar centered, we need to calculate the
  // difference between the width of the left box and the width of the right box.
  @centerOffset: @navbarLeftMarginDarwin + 2 * (@navbarButtonWidth + @navbarButtonSpacing) // width area on the left
                 - (@navbarBraveButtonWidth + 2 * @navbarButtonSpacing);
}

// Windows specific styles
.platform--win32 {
  div#window.frameless:not(.isFullScreen):not(.isMaximized) {
    border: 1px solid #000;
    box-sizing: border-box;
  }

  // changes to ensure window can be as small as 480px wide
  // and still be useable and have the caption buttons intact
  @media (max-width: @breakpointExtensionButtonPadding) {
    .navigatorWrapper .topLevelEndButtons .extraDragArea {
      width: 0;
    }
  }
  @media (max-width: @breakpointSmallWin32) {
    #titleBar { width: 100px; }
    .menubarContainer {
      .menubar {
        .menubarItem {
          padding: 0 5px 1px;
        }
      }
    }
  }
  @media (max-width: @breakpointTinyWin32) {
    .loadTime { display: none; }
    .menubarContainer {
      .menubar {
        .menubarItem {
          padding: 0 3px 1px;
        }
      }
    }
  }

  // Windows 7 specific styles
  &.win7 {
    .windowCaptionButtons {
      > .container {
        margin-right: 6px;

        button.captionButton {
          outline: 0;
          height: 18px;
          color: #b1acac;
          border: 1px solid #adadad;
          border-top: 0;
          display: inline-block;
          background-color: #f5f5f5;
          box-shadow: inset 1px 1px rgba(255, 255, 255, 0.9);
          width: 25px;

          &.minimize {
            width: 28px;
            border-right: 0px;
            &:hover {
              background-color: #fff;
            }
            &:active {
              background-color: #cacacb;
            }
            border-radius: 0 0 0 4px;

            .widget {
              width: 10px;
              height: 3px;
              border: 1px solid #838383;
              background: #fff;
              display: inline-block;
              border-radius: 1px;
            }
          }

          &.maximize {
            border-right: 0px;
            width: 27px;
            &:hover {
              background-color: #fff;
              .widget {
                .widget2 {
                  background-color: #fff;
                }
              }
            }
            &:active {
              background-color: #cacacb;
              .widget {
                .widget2 {
                  background-color: #cacacb;
                }
              }
            }
            &.fullscreen {
              &:hover {
                background-color: #e5e5e5;
              }
              &:active {
                background-color: #cacacb;
              }
              .widget {
                .widget1 {
                  width: 8px;
                  top: 2px;
                  left: 10px;
                }
                .widget2 {
                  width: 8px;
                  height: 8px;
                  top: -5px;
                  left: 6px;
                  background: #fff;
                  border-radius: 1px;
                }
                .widget3 {
                  display: inline-block;
                  width: 2px;
                  height: 2px;
                  border: 1px solid #838383;
                  background: #fff;
                  position: relative;
                  top: -20px;
                  left: -2px;
                }
              }
            }

            .widget {
              .widget1 {
                width: 10px;
                height: 8px;
                border: 1px solid #838383;
                background: #fff;
                position: relative;
                top: 2px;
                left: 7px;
                border-radius: 1px;
              }
              .widget2 {
                width: 4px;
                height: 2px;
                border: 1px solid #838383;
                background-color: #f5f5f5;
                position: relative;
                top: -5px;
                left: 10px;
                border-radius: 0;
              }
              .widget3 { display: none; }
            }
          }

          &.close {
            width: 48px;
            border-radius: 0 0 4px 0;
            &:hover {
              background-color: #d9504e;
            }
            &:active {
              background-color: #d7393d;
            }

            .widget {
              background: url('../img/windows/close.svg') no-repeat;
              display: inline-block;
              height: 12px;
              width: 12px;
              position: relative;
              top: 3px;
            }
          }
        }
      }
    }
  }

  // Windows 10 specific styles
  &.win10 {
    &.inactive div#window.frameless:not(.isFullScreen):not(.isMaximized) {
      border: 1px solid #aaaaaa;
    }
    div#window.frameless:not(.isFullScreen):not(.isMaximized) {
      border: 1px solid #2283d3;
    }
    .windowCaptionButtons {
      &.verticallyCenter {
        > .container {
          height: 100%;
        }
      }
      &:not(.verticallyCenter) {
        > .container {
          button.captionButton {
            height: 29px;
            &.fullscreen {
              height: 21px;
            }
          }
        }
      }

      > .container {
        button.captionButton {
          width: 45px;
          border: 0;
          background-color: transparent;

          &.fullscreen { }

          &.minimize {
            &:hover {
              background-color: #e5e5e5;
            }
            &:active {
              background-color: #cacacb;
            }
            &.fullscreen {
              .widget {
                top: 5px;
                left: -2px;
              }
            }
            .widget {
              background: url('../img/windows/win10_minimize.svg') no-repeat;
              display: inline-block;
              height: 10px;
              width: 10px;
              position: relative;
              top: 4px;
              left: -1px;
            }
          }

          &.maximize {
            border-right: 0px;
            &:hover {
              background-color: #e5e5e5;
            }
            &:active {
              background-color: #cacacb;
            }
            &.fullscreen {
              &:hover {
                background-color: #e5e5e5;
              }
              &:active {
                background-color: #cacacb;
              }
              .widget {
                background: url('../img/windows/win10_restore.svg') no-repeat;
                display: inline-block;
                height: 10px;
                width: 10px;
                position: relative;
                top: 0px;
                left: -2px;
              }
            }
            .widget {
              background: url('../img/windows/win10_expand.svg') no-repeat;
              display: inline-block;
              height: 10px;
              width: 10px;
              position: relative;
              top: -1px;
              left: -1px;

              .widget1 { display: none; }
              .widget2 { display: none; }
              .widget3 { display: none; }
            }
          }

          &.close {
            width: 46px;
            &:hover {
              background-color: #e5182c;
              .widget {
                background: url('../img/windows/win10_close_white.svg') no-repeat;
              }
            }
            &:not(:hover) {
              .widget {
                background: url('../img/windows/win10_close.svg') no-repeat;
              }
            }
            &:active {
              background-color: #ef717c;
            }
            &.fullscreen {
              top: 0px;
              width: 45px;
            }
            .widget {
              display: inline-block;
              height: 10px;
              left: -1px;
              position: relative;
              top: -1px;
              width: 10px;
            }
          }
        }
      }
    }
    .verticallyCenter {
      justify-content: center;
    }
  }
}

// Styles had to be reworked to properly position the new caption buttons for Windows
.navigator {
  display: flex;
  //border-bottom: 1px solid #bbb;

  &.allowDragging {
    -webkit-app-region: drag;
  }
}

// Window Caption Buttons (for use w/ slim titlebar)
.windowCaptionButtons {
  display: flex;
  flex-direction: column;
  white-space: nowrap;

  .hidden {
    display: none;
  }

  button.captionButton {
    outline: none;
    vertical-align: top;
  }

  &.fullscreen {
    .win7 {
      margin-top: 1px;
    }
  }

  .container {
    display: flex;
    flex-grow: 0;
    -webkit-app-region: no-drag;
  }
}

// Menubar (for use w/ slim titlebar)
.menubarContainer {
  width: 100%;
  display: flex;
  flex-direction: row;

  .menubar {
    display: flex;
    cursor: default;
    user-select: none;
    flex-grow: 1;
    margin-top: 2px;
    height: 19px;

    .menubarItem {
      color: black;
      font: menu;
      font-size: 12px;
      -webkit-app-region: no-drag;
      padding: 0 10px 1px;
      border: 1px solid transparent;

      &:hover {
        background-color: #e5f3ff;
        border: 1px solid #cce8ff;
      }
    }

    .selected {
      background-color: #cce8ff !important;
      border: 1px solid #99d1ff !important;
    }
  }

  .windowCaptionButtons {
    flex-grow: 0;
  }
}

// Here I grouped the rules to keep the layout of the top bar consistent.
// The tricky part is to keep the title in `#navigationBar` centered when the
// box on its left has different size than the one on the right.
// This is achieved by the local variable `@centerOffset`.
.navigatorWrapper {
  // Since we want to keep the navigationBar centered, we need to calculate the
  // difference between the width of the left box and the width of the right box.
  @centerOffset: 2 * (@navbarButtonWidth + @navbarButtonSpacing) // width area on the left
                 - (@navbarBraveButtonWidth + 2 * @navbarButtonSpacing);

  @rightMargin: @navbarLeftMarginDarwin / 2;

  // Navigation bar at the center
  #navigationBar {
    &.titleMode {
      padding-right: @centerOffset;

      @media (max-width: @breakpointNarrowViewport) {
        transition: padding @transitionDuration ease-in-out;
        padding-right: 0;
      }
    }

    @media (max-width: @breakpointNarrowViewport) {
      padding-right: 0;
    }

    @media (max-width: @breakpointNarrowViewport) {
      width: 100%;
    }
  }

  // Buttons on the right
  .topLevelEndButtons {

    @media (max-width: @breakpointWideViewport) {
      .extraDragArea {
        display: flex;
        flex-grow: 0;
        width: @navbarBraveButtonMarginLeft;
      }
    }
  }
}

.urlbarForm {
  *:not(legend) {
    z-index: @zindexUrlbarNotLegend;
  }

  @media (max-width: @breakpointNarrowViewport) {
    max-width: 80%;
  }
}

#navigationBar {

  // #6253 #6680
  > * {
    -webkit-app-region: no-drag;
  }

  &:not(.titleMode) {
    > * {
      animation: fadeIn .6s;
      z-index: @zindexNavigationBarElements;
    }
  }
}
